{"files":[{"id":"0443a0c8-0bf1-4aba-a372-5004da870fb3","name":"GoogleBooks","type":"server_js","source":"function queryMulti(string, startIndex) {\n  if (!string) {return null}\n  \n  if (!startIndex) {startIndex \u003d \"0\";}\n  var key \u003d \"AIzaSyDI_wSb5YHByXIBKS_NwbsaRr-XRxTbpfQ\";\n  var query_line \u003d \"https://www.googleapis.com/books/v1/volumes?q\u003d\"+string+\"\u0026startIndex\u003d\"+startIndex+\"\u0026key\u003d\"+key+\"\";\n  \n  var json \u003d JSON.parse(UrlFetchApp.fetch(query_line));\n  \n  if (!json.items || json.items.length \u003d\u003d 0) {\n    return null; \n  }\n  \n  var items \u003d json.items;\n  var books \u003d [];\n  \n  for (var i \u003d 0 ; i \u003c items.length ; i++) {\n    \n    var book \u003d items[i].volumeInfo;\n\n    var data \u003d {\n      gbid: items[i].id,\n      title: book.title,\n      subtitle: book.subtitle,\n      authors: book.authors,\n      category: book.mainCategory,\n      description: book.description,\n      isbn: [],\n      pages: book.pageCount,\n      language: book.language,\n      cover: book.imageLinks\n    };\n    if (!book.mainCategory \u0026\u0026 book.categories) {\n      data.category \u003d book.categories.join(\" / \");\n    }\n    if (book.industryIdentifiers) {\n      for (var j \u003d 0 ; j \u003c book.industryIdentifiers.length ; j++) {\n        data.isbn.push(book.industryIdentifiers[j].identifier);\n      }\n    }\n    books.push(data);\n\n  }\n  return books;\n}\n\n\nfunction querySingle(e) {\n  if (e \u003d\u003d null) {return null}\n  \n  var key \u003d \"AIzaSyDI_wSb5YHByXIBKS_NwbsaRr-XRxTbpfQ\";\n  var query_line \u003d \"https://www.googleapis.com/books/v1/volumes?q\u003d\"+e+/*\"+isbn:\"+e+*/\"\u0026key\u003d\"+key+\"\";\n  \n  var json \u003d JSON.parse(UrlFetchApp.fetch(query_line));\n//  Logger.log(json.totalItems);\n  \n  try {\n    var item \u003d json.items[0];\n    var book \u003d item.volumeInfo;\n    //    var book \u003d JSON.parse(UrlFetchApp.fetch(\"https://www.googleapis.com/books/v1/volumes/\"+item.id)).volumeInfo;\n  } catch (TypeError) {\n    Logger.log(\"ISBN not found.\");\n    return null;\n  }\n  var data \u003d {\n    gbid: item.id,\n    title: book.title,\n    subtitle: book.subtitle,\n    authors: book.authors,\n    category: book.mainCategory,\n    //    category: book.mainCategor,\n    description: book.description,\n    isbn: [],\n    pages: book.pageCount,\n    language: book.language,\n    cover: book.imageLinks\n  };\n  if (!book.mainCategory \u0026\u0026 book.categories) {\n    data.category \u003d book.categories[0];\n  }\n  //  if (data.description) {\n  //    data.description \u003d data.description.replace(/\u003c\\S+\u003e/g,\" \"); \n  //  }\n  if (book.industryIdentifiers) {\n    for (var i \u003d 0 ; i \u003c book.industryIdentifiers.length ; i++) {\n//      if (book.industryIdentifiers[i].type \u003d\u003d \"ISBN_13\") {\n//        data.isbn \u003d book.industryIdentifiers[i].identifier;\n      data.isbn,push(book.industryIdentifiers[i].identifier);\n//      }\n    }\n  }\n  //  Logger.log(data);\n//  Logger.log(json);\n  return data;\n}\n\n\nfunction getByGBId(id) {\n  \n  var getUrl \u003d \"https://www.googleapis.com/books/v1/volumes/\"+id;\n  \n  var json \u003d UrlFetchApp.fetch(getUrl);\n  \n  try {\n    var item \u003d JSON.parse(json);\n    var book \u003d item.volumeInfo;\n  } catch (TypeError) {\n    Logger.log(\"ISBN not found.\");\n    return {};\n  }\n  \n  var data \u003d {\n    gbid: item.id,\n    title: book.title,\n    subtitle: book.subtitle,\n    authors: book.authors,\n    //    categories: book.mainCategory.split(\" / \"),\n    //    category: book.categories[0],\n    description: book.description,\n    pages: book.pageCount,\n    language: book.language,\n    cover: book.imageLinks,\n    isbn: []\n  };\n  if (book.industryIdentifiers) {\n    for (var i \u003d 0 ; i \u003c book.industryIdentifiers.length ; i++) {\n      data.isbn.push(book.industryIdentifiers[i].identifier);\n    }\n  }\n  return data;\n}\n\n\n\nfunction test(){\n  Logger.log(\"start test\");\n  var data \u003d queryMulti(\"nation\");\n//  Logger.log(data);\n  for (var i \u003d 0 ; i \u003c data.length ; i++) { Logger.log(data[i].title); }\n  return data;\n}"}]}